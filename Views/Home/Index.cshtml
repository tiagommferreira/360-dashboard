<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Dashboard
        <small>Control panel</small>
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li class="active">Dashboard</li>
    </ol>
</section>

<!-- Main content -->
<section class="content">
    <!-- Small boxes (Stat box) -->
    <div class="row">
        <div class="col-lg-4 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-aqua">
                <div class="inner">
                    <h3>@ViewBag.Sales.Count</h3>
                    <p>Sales</p>
                </div>
                <div class="icon">
                    <i class="ion ion-bag"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div><!-- ./col -->
        <div class="col-lg-4 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-green">
                <div class="inner">
                    <h3>$53.3<sup style="font-size: 20px">M</sup></h3>
                    <p>Balance</p>
                </div>
                <div class="icon">
                    <i class="ion ion-stats-bars"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div><!-- ./col -->
        <div class="col-lg-4 col-xs-6">
            <!-- small box -->
            <div class="small-box bg-yellow">
                <div class="inner">
                    <h3>@ViewBag.Funcionarios.Count</h3>
                    <p>Workers</p>
                </div>
                <div class="icon">
                    <i class="ion ion-person-add"></i>
                </div>
                <a href="#" class="small-box-footer">More info <i class="fa fa-arrow-circle-right"></i></a>
            </div>
        </div><!-- ./col -->
    </div><!-- /.row -->
    <div class="row">
        <div class="col-lg-6">
            <h2>Top Products</h2>
            <canvas data-url="/api/Produtos/Top" id="top-products-chart" height="400" width="500"></canvas>
        </div>
        <div class="col-lg-6">
            <h2>Transactions</h2>
            <select id="transacoes-ano">
                <option value="2013">2013</option>
                <option value="2014">2014</option>
                 <option value="2015">2015</option>
            </select>
            <br />
            <canvas data-vendasurl="/api/Vendas/Info" data-comprasurl="/api/Compras/Info" id="transactions-chart" height="400" width="500"></canvas>
        </div>
    </div>

</section><!-- /.content -->

<script>

    var optionsLineChart = {

        ///Boolean - Whether grid lines are shown across the chart
        scaleShowGridLines: true,

        //String - Colour of the grid lines
        scaleGridLineColor: "rgba(0,0,0,.05)",

        //Number - Width of the grid lines
        scaleGridLineWidth: 1,

        //Boolean - Whether to show horizontal lines (except X axis)
        scaleShowHorizontalLines: true,

        //Boolean - Whether to show vertical lines (except Y axis)
        scaleShowVerticalLines: true,

        //Boolean - Whether the line is curved between points
        bezierCurve: true,

        //Number - Tension of the bezier curve between points
        bezierCurveTension: 0.4,

        //Boolean - Whether to show a dot for each point
        pointDot: true,

        //Number - Radius of each point dot in pixels
        pointDotRadius: 4,

        //Number - Pixel width of point dot stroke
        pointDotStrokeWidth: 1,

        //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
        pointHitDetectionRadius: 20,

        //Boolean - Whether to show a stroke for datasets
        datasetStroke: true,

        //Number - Pixel width of dataset stroke
        datasetStrokeWidth: 2,

        //Boolean - Whether to fill the dataset with a colour
        datasetFill: true,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].strokeColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

    };

    var donutColors = ["#F7464A", "#4D88FF", "#47D147"];
    var optionsDonutChart = {
        //Boolean - Whether we should show a stroke on each segment
        segmentShowStroke: true,

        //String - The colour of each segment stroke
        segmentStrokeColor: "#fff",

        //Number - The width of each segment stroke
        segmentStrokeWidth: 2,

        //Number - The percentage of the chart that we cut out of the middle
        percentageInnerCutout: 50, // This is 0 for Pie charts

        //Number - Amount of animation steps
        animationSteps: 100,

        //String - Animation easing effect
        animationEasing: "easeOutBounce",

        //Boolean - Whether we animate the rotation of the Doughnut
        animateRotate: true,

        //Boolean - Whether we animate scaling the Doughnut from the centre
        animateScale: false,

        //String - A legend template
        legendTemplate: "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<segments.length; i++){%><li><span style=\"background-color:<%=segments[i].fillColor%>\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>"

    };

</script>
<script>

    var lctx = $("#transactions-chart").get(0).getContext("2d");
    var ctx = $("#top-products-chart").get(0).getContext("2d");
    var myLineChart;
    var myDoughnutChart;

    var artigos = [
        { nome: '@ViewBag.TopProdutos[0].ArtigoDescricao', quantidadeVendida: '@ViewBag.TopProdutos[0].Quantidade' },
        { nome: '@ViewBag.TopProdutos[1].ArtigoDescricao', quantidadeVendida: '@ViewBag.TopProdutos[1].Quantidade' },
        { nome: '@ViewBag.TopProdutos[2].ArtigoDescricao', quantidadeVendida: '@ViewBag.TopProdutos[2].Quantidade' },
    ];

    $("#transacoes-ano").change(function () {
        transactionsChart($("#transacoes-ano").val());
    });
    transactionsChart($("#transacoes-ano").val());

    function vendasAjax(ano) {
        return $.ajax({
            url: $("#transactions-chart").data("vendasurl"),
            data: { year: ano }
        });
    }
    function comprasAjax(ano) {
        return $.ajax({
            url: $("#transactions-chart").data("comprasurl"),
            data: { year: ano }
        });
    }
    function transactionsChart(ano) {
        $.when(vendasAjax(ano), comprasAjax(ano)).done(function (dataVendas, dataCompras) {
            var vendas = [];
            var compras = [];
            vendas = dataVendas[0];
            compras = dataCompras[0];

            var vendasData = [];
            var vendasLabels = [];
            for (i = 0; i < vendas.length; i++) {
                vendasLabels.push(vendas[i].Mes);
                vendasData.push(parseFloat(vendas[i].Valor));
            }

            var comprasData = [];
            var comprasLabels = [];
            for (i = 0; i < compras.length; i++) {
                comprasLabels.push(compras[i].Mes);
                comprasData.push(parseFloat(compras[i].Valor));
            }

            var transactionsDataLine = {
                labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                datasets: [
                    {
                        label: "Vendas",
                        fillColor: "rgba(152,230,0,0.2)",
                        strokeColor: "rgba(152,230,0,1)",
                        pointColor: "rgba(152,230,0,1)",
                        pointStrokeColor: "#fff",
                        pointHighlightFill: "#fff",
                        pointHighlightStroke: "rgba(152,230,0,1)",
                        data: vendasData
                    },
                     {
                         label: "Compras",
                         fillColor: "rgba(151,187,205,0.2)",
                         strokeColor: "rgba(151,187,205,1)",
                         pointColor: "rgba(151,187,205,1)",
                         pointStrokeColor: "#fff",
                         pointHighlightFill: "#fff",
                         pointHighlightStroke: "rgba(151,187,205,1)",
                         data: comprasData
                     }
                ]
            };
            if (myLineChart != null)
                myLineChart.destroy();
            myLineChart = new Chart(lctx).Line(transactionsDataLine, optionsLineChart);
        });
        

    }

    function topProductsAjax() {
        return $.ajax({
            url: $("#top-products-chart").data("url"),
            data: { required: 3 }
        });
    }

    function topProductsChart() {
        $.when(topProductsAjax()).done(function (dataProducts) {
            var products = dataProducts;
            var topProdutosData = [];
            console.log(products);
            var i = 0;
            for (; i < products.length; i++) {
                topProdutosData.push({
                    value: products[i].Quantidade,
                    color: donutColors[i % donutColors.length],
                    highlight: donutColors[i % donutColors.length],
                    label: products[i].ArtigoDescricao
                });
            }

            if (myDoughnutChart != null)
                myDoughnutChart.destroy();
            myDoughnutChart = new Chart(ctx).Doughnut(topProdutosData, optionsDonutChart);

        });
    }

    topProductsChart();

</script>